{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","props","onChange","PersonForm","onSubmit","value","name","onChangeName","number","onChangeNumber","type","Person","person","deletePerson","onClick","Persons","persons","removePerson","map","key","id","baseUrl","axios","get","then","response","data","newObject","post","delete","put","Notification","success","error","className","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","filter","setFilter","notification","setNotification","setError","useEffect","personService","initialPersons","personsToShow","toLowerCase","includes","event","target","preventDefault","find","window","confirm","changedNumber","returnedPerson","setTimeout","catch","console","log","finally","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46cd51d4.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = (props) => {\n  return (\n    <div>\n      filter shown with: <input onChange={props.onChange}/>\n    </div>\n\n  )\n}\n\nexport default Filter\n","import React from 'react'\n\nconst PersonForm = (props) => {\n  return (\n    <form onSubmit={props.onSubmit}>\n      <div>\n        name: <input value={props.name} onChange={props.onChangeName}/>\n      </div>\n      <div>\n        number: <input value={props.number} onChange={props.onChangeNumber}/>\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\nexport default PersonForm\n","import React from 'react'\n\nconst Person = ({ person, deletePerson }) => {\n  return (\n    <div>\n      {person.name} {person.number}\n      <button onClick={deletePerson}>\n       delete\n      </button>\n    </div>\n  )\n}\n\nexport default Person\n","import React from 'react'\nimport Person from './Person'\n\nconst Persons = ( { persons, removePerson}) => {\n  return (\n    persons.map(person =>\n      <Person \n        key={person.id} \n        person={person}\n        deletePerson={() => removePerson(person.id)}\n      />\n    )\n  )\n}\n\nexport default Persons\n","import axios from 'axios'\n// Change baseUrl for connecting to the node.js backend server\n// const baseUrl = 'http://localhost:3001/persons'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = id => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, remove, update}\n","import React from 'react'\n\nconst Notification = ({ success, error }) => {\n  if (error) {\n    return (\n      <div className=\"notification-error\">\n        {error}\n      </div>\n    )\n  }\n  if (success) {\n    return (\n      <div className=\"notification-success\">\n        {success}\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport default Notification\n","import React, { useState, useEffect } from 'react';\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\n\nfunction App() {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ notification, setNotification ] = useState('')\n  const [ error, setError ] = useState('')\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const person = persons.find(person => person.name === newName)\n\n    if (person) {\n      if (window.confirm(`${newName} is already added to the phonebook, replace the old number with a new one?`)) {\n        // const changedPerson = {...person, number: newNumber}\n        // Maybe refactor personService.update to pass a simple variable instead of an object\n        const changedNumber = {number: newNumber}\n        const {id} = person\n        personService\n          .update(id, changedNumber)\n          .then(returnedPerson => {\n            setPersons(persons.map(person => \n              person.id !== id ? person : returnedPerson))\n            setNotification(`${returnedPerson.name}'s number changed`)\n            setTimeout(() => {\n              setNotification(null)\n            }, 5000)\n          })\n          .catch(error => {\n            if(error.response.data.error) {\n              console.error(error.response.data)\n              setError(error.response.data.error)\n              setTimeout(() => {\n                setError(null)\n              }, 5000)\n            } else {\n              console.log(error)\n              setError(`Information of ${person.name} has already been removed from the server`)\n              setPersons(persons.filter(person => person.id !== id))\n              setTimeout(() => {\n                setError(null)\n              }, 5000)\n            }\n          })\n          .finally(() => {\n            setNewName('')\n            setNewNumber('')\n          })\n      }\n      return\n    } else {\n      /** Person's ID is now created on the server\n        // Change id initialization, because of potential key/id conflict after deletions and additions at rendering Person component\n        const personsId = persons.map(person => person.id)\n        const max = Math.max(...personsId)\n      */\n      const personObject = {\n        // id: max + 1,\n        name: newName,\n        number: newNumber\n      }\n      // Register the person in the server\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNotification(`Added ${returnedPerson.name}`)\n          setTimeout(() => {\n            setNotification(null)\n          }, 5000)\n        })\n        .catch(error => {\n          console.error(error.response.data)\n          setError(error.response.data.error)\n          setTimeout(() => {\n            setError(null)\n          }, 5000)\n        })\n        .finally(() => {\n          setNewName('')\n          setNewNumber('')\n        })\n    }\n  }\n\n    // NB: the person object could be passed as parameter through Person's props instead of just the id\n  const removePerson = id => {\n    const person = persons.find(person => person.id === id)\n    if (window.confirm(`Delete ${person.name}?`)) {\n        personService\n          .remove(id)\n          .then(() => { // axios.delete does not return any data\n            setPersons(persons.filter(person => person.id !== id))\n          })\n    }\n  }\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n\n  // Filter persons by name (case insensitive)\n  const personsToShow = persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification success={notification} error={error} />\n      <Filter onChange={handleFilterChange} />\n\n      <h3>Add a new</h3>\n      <PersonForm onSubmit={addPerson} name={newName} number={newNumber} onChangeName={handleNameChange} onChangeNumber={handleNumberChange} />\n\n      <h3>Numbers</h3>\n      <Persons persons={personsToShow} removePerson={removePerson}/>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}